---
title: "DB2_limpieza"
format: html
editor: visual
---

## Limpieza de datos

Se procederá a limpiar la base de datos `Programming_languages.csv`.

Primero, se verifica que las librerías estén instaladas:

```{r}
library(readr)
```

Luego, se importa la base de datos con la librería `readr`, asignando a una variable llamada `DF`.

```{r, eval=FALSE, warning=FALSE}
dataframe <- read_csv("Programming_languages.csv")
```

Llamaremos la función `problems()` para detectar si hay algún error en el `dataframe`.

```{r, eval=FALSE}
problems()
```

Como los errores presentados son de variables que no consideramos en este estudio, procedemos a ignorarlos, ya que no serán relevantes.

Luego, veremos cuántas filas y columnas tiene nuestro `dataframe`:

```{r}
nrow(dataframe)
ncol(dataframe)
```

Como se puede ver, hay muchas columnas (en total 353) que no utilizaremos. Esto se puede ver al ejecutar el comando `names()`. Se muestran las primeros 20:

```{r}
names(dataframe[0:20])
```

Por ello, procedemos a limpiar nuestro `dataframe` centrándonos en las columnas que nos interesan, las cuales son: `Title`, `Appeared`, `Type`, `Rank`, `numberOfJobs`, `numberOfUsers` y `Country`.

Vamos a eliminar las columnas que no necesitemos:

```{r}
# Columnas a conservar
columnas_conservar <- c("title", "appeared", "type", "rank", "numberOfJobs", "numberOfUsers", "country")

# Obtener las columnas presentes en la base de datos
columnas_presentes <- colnames(dataframe)

# Identificar las columnas a eliminar
columnas_eliminar <- setdiff(columnas_presentes, columnas_conservar)

# Eliminar las columnas no deseadas
dataframe <- dataframe[, -which(colnames(dataframe) %in% columnas_eliminar)]

```

El resultado de este proceso sería:

```{r}
names(dataframe)
```

Ahora, comprobemos cuántas observaciones completas tenemos:

```{r}
table(complete.cases(dataframe), useNA = "ifany")
```

Tenemos un total de 3276 observaciones completas, veremos de qué variable hacen falta datos:

```{r}
table(is.na(dataframe$country))
```

Efectivamente faltan datos en la columna `country`. Procederemos a eliminar esas observaciones:

```{r}
dataframe <- dataframe[!is.na(dataframe$country), ]
```

Ahora, verificamos que tengamos observaciones completas:

```{r}
table(complete.cases(dataframe), useNA = "ifany")
```
