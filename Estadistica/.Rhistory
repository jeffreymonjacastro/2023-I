7 + 5 * 3
1 - 2 - 3
4^3^2
reticulate::repl_python()
print(" "*i + "*")
i = 0
hello
10+20
knitr::opts_chunk$set(echo = TRUE)
1 + 1
tinytex::install_tinytext()
1 + 1
tinytex::install_tinytex()
1 + 1
cat("Hola Mundo")
DF = read_csv("DD20230331.csv")
library(reader)
DF = read_csv("DD20230331.csv")
DF = read.csv("DD20230331.csv")
str(DF)
library{readr}
library(readr)
DF.problems()
problems(DF)
table(DF$Edad)
library(dplyr)
instal_library(dplyr)
install.packages("dplyr")
library(dplyr)
table(DF$Edad)
library(readr)
DF <- read_csv("DD20230331.csv")
problems(DF)
str(DF)
table(DF$Edad)
table(DF$Edad)
problems()
problems()
problems()
problems(DF)
nrow(DF)
ncol(DF)
names(DF)
DF %>% select(Edad) %>% group_by(Edad) %>% summarize(n())
nrow(DF)
is.na(DF$Edad)
table(is.na(DF$Edad))
DF <- read_csv("DD20230331.csv")
table(is.na(DF$Edad))
any(DF$Edad == "-")
where(DF$Edad == "-")
which(DF$Edad == "-")
View(DF)
DF[1667, ]
DF$Edad[1667] <- NA
table(is.na(DF$Edad))
DF %>% select(Edad) %>% group_by(Edad) %>% summarize(n())
.main ... eval_with_user_handlers -> eval -> eval -> install.packages -> contrib.url
main ... eval_with_user_handlers -> eval -> eval -> install.packages -> contrib.url
eval_with_user_handlers -> eval -> eval -> install.packages -> contrib.url
DF$EdadLimpia <- as.numeric(DF$Edad)
DF %>% select(Edad, EdadLimpia)
any(DF$EdadLimpia < 13)
? any
any(DF&EdadLimpia < 13, na.rm = TRUE)
any(DF$EdadLimpia < 13, na.rm = TRUE)
any(DF$EdadLimpia < 13, na.rm = TRUE)
all(DF$EdadLimpia < 13, na.rm = TRUE)
any(DF$EdadLimpia < 13, na.rm = TRUE)
all(DF$EdadLimpia >= 13, na.rm = TRUE)
DF$EdadLimpia <- round(DF$EdadLimpia, digits = 0)
#DF$EdadLimpia <- round(DF$EdadLimpia, digits = 0)
DF$EdadLimpia <- floor(DF$EdadLimpia)
any(DF$EdadLimpia > 99, na.rm = TRUE)
table(DF$EdadLimpia >= 50)
table(DF$EdadLimpia >= 50, useNA = "ifany")
DF$EdadLimpia[DF$EdadLimpia >= 50] <- NA
table(DF$EdadLimpia >= 50, useNA = "ifany")
sum(!is.na(DF$EdadLimpia))
table(complete.cases(DF), useNA = "ifany")
table(DF$...19)
table(DF$...19)
table(DF$...20)
all(is.na(DF$...19))
all(is.na(DF$...20))
DF$...19 <- NULL
DF$...19 <- NULL
DF$...20 <- NULL
DF$...19 <- NULL
library(readr)
library(readr)
DF <- read_csv("DD20230331.csv")
DF$Edad[1667] <- NA
library(readr)
DF <- read_csv("DD20230331.csv")
problems(DF)
nrow(DF)
ncol(DF)
names(DF)
str(DF)
install.packages("dplyr")
table(DF$Edad)
DF %>% select(Edad) %>% group_by(Edad) %>% summarize(n())
nrow(DF)
table(is.na(DF$Edad))
any(DF$Edad == "-")
which(DF$Edad == "-")
DF[1667, ]
DF %>% select(-...20) -> DF
table(complete.cases(DF), useNA = "ifany")
DF$...19 <- NULL
DF %>% select(-...20)
DF %>% select(-...20) -> DF
table(complete.cases(DF), useNA = "ifany")
View(DF)
library(readr)
dataframe <- read_csv("Programming_languages.csv")
nrow(dataframe)
ncol(dataframe)
names(dataframe[0:20])
table(complete.cases(dataframe), useNA = "ifany")
# Columnas a conservar
columnas_conservar <- c("title", "appeared", "type", "rank", "numberOfJobs", "numberOfUsers", "country")
# Obtener las columnas presentes en la base de datos
columnas_presentes <- colnames(dataframe)
# Identificar las columnas a eliminar
columnas_eliminar <- setdiff(columnas_presentes, columnas_conservar)
# Eliminar las columnas no deseadas
dataframe <- dataframe[, -which(colnames(dataframe) %in% columnas_eliminar)]
names(dataframe)
table(complete.cases(dataframe), useNA = "ifany")
table(is.na(dataframe$country))
table(is.na(dataframe$country))
table(complete.cases(dataframe), useNA = "ifany")
table(is.na(dataframe$country))
dataframe <- dataframe[!is.na(dataframe$country), ]
table(complete.cases(dataframe), useNA = "ifany")
dataframe <- read_csv("Programming_languages.csv")
View(dataframe)
# Columnas a conservar
columnas_conservar <- c("title", "appeared", "type", "rank", "numberOfJobs", "numberOfUsers", "country")
# Obtener las columnas presentes en la base de datos
columnas_presentes <- colnames(dataframe)
# Identificar las columnas a eliminar
columnas_eliminar <- setdiff(columnas_presentes, columnas_conservar)
# Eliminar las columnas no deseadas
dataframe <- dataframe[, -which(colnames(dataframe) %in% columnas_eliminar)]
View(dataframe)
dataframe <- dataframe[!is.na(dataframe$country), ]
table(complete.cases(dataframe), useNA = "ifany")
View(dataframe)
dataframe %>% select(type) %>% group_by(type) %>% summarize(n())
library(readr)
nrow(dataframe)
ncol(dataframe)
names(dataframe[0:20])
dataframe %>% select(type) %>% group_by(type) %>% summarize(n())
library(dplyr)
dataframe %>% select(type) %>% group_by(type) %>% summarize(n())
which(dataframe$type == "database")
dataframe[575, ]
search <- c(which(dataframe$type == "database"))
clc
dataframe <- read_csv("Programming_languages.csv")
library(readr)
dataframe <- read_csv("Programming_languages.csv")
library(readr)
problems()
problems()
nrow(dataframe)
ncol(dataframe)
# Columnas a conservar
dataframe <- select(dataframe, title, appeared, type, rank, numberOfJobs, numberOfUsers, country)
# Columnas a conservar
dataframe <- select(dataframe, title, appeared, type, rank, numberOfJobs, numberOfUsers, country)
library(readr)
dataframe <- read_csv("Programming_languages.csv")
nrow(dataframe)
ncol(dataframe)
# Columnas a conservar
dataframe <- select(dataframe, title, appeared, type, rank, numberOfJobs, numberOfUsers, country)
library(readr)
library(dplyr)
problems()
# Columnas a conservar
dataframe <- select(dataframe, title, appeared, type, rank, numberOfJobs, numberOfUsers, country)
names(dataframe)
table(complete.cases(dataframe), useNA = "ifany")
dataframe <- na.omit(dataframe)
table(complete.cases(dataframe), useNA = "ifany")
dataframe <- dataframe[dataframe$type == "pl" | dataframe$type == "queryLanguage",]
dataframe %>% select(type) %>% group_by(type) %>% summarize(n())
dataframe <- read_csv("Programming_languages.csv")
#nrow(dataframe)
ncol(dataframe)
nrow(dataframe)
ncol(dataframe)
dataframe <- dataframe[dataframe$numberOfJobs > 0,]
View(dataframe)
library(readr)
library(dplyr)
dataframe <- read_csv("Programming_languages.csv")
nrow(dataframe)
ncol(dataframe)
# Columnas a conservar
dataframe <- select(dataframe, title, appeared, type, rank, numberOfJobs, numberOfUsers, country)
names(dataframe)
table(complete.cases(dataframe), useNA = "ifany")
dataframe <- na.omit(dataframe)
table(complete.cases(dataframe), useNA = "ifany")
dataframe <- dataframe[dataframe$type == "pl" | dataframe$type == "queryLanguage",]
View(dataframe)
dataframe <- dataframe[dataframe$numberOfUsers > 0,]
nrow(dataframe)
View(dataframe)
dataframe <- dataframe[dataframe$numberOfUsers > 10,]
nrow(dataframe)
dataframe
dataframe <- dataframe[dataframe$appeared >= 1945,]
DF$UltimoDigitoEst <- Estatura - 10*(DF$Estatura %% 10)
library(readr)
library(dplyr)
DF <- read_csv("../DD20230331.csv")
nrow(DF)
table(DF$`Estatura (cm)`, useNA = "always")
library(dplyr)
names(DF)
table(DF$`Estatura (cm)`)
DF %>% rename(Estatura = `Estatura (cm)`) -> DF
table(DF$Estatura < 45, useNA = 'ifany') # Si es menor de 45 cm
table(DF$Estatura > 280, useNA = 'ifany') # Si es mayor a 280 cm
DF[DF$Estatura < 45, ]
DF %>% filter(Estatura < 2.8)
DF$Estatura[DF$Estatura < 2.8 & !is.na(DF$Estatura)] <-
DF$Estatura[DF$Estatura < 2.8 & !is.na(DF$Estatura)]*100
table(DF$Estatura < 45, useNA = 'ifany')
DF %>% filter(Estatura > 280)
DF$Estatura[which(DF$Estatura > 1000)] <- NA
hist(DF$Estatura)
hist(DF$Estatura, breaks = 115:210, las =3)
DF$UltimoDigitoEst <- Estatura - 10*(DF$Estatura %% 10)
DF$UltimoDigitoEst <- DF$Estatura - 10*(DF$Estatura %% 10)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst, breaks = (0:10) - 0.5)
hist(DF$UltimoDigitoEst)
DF$UltimoDigitoEst <- DF$Estatura - 10*(DF$Estatura %% 10)
hist(DF$UltimoDigitoEst)
hist(DF$UltimoDigitoEst, breaks = (1:10))
hist(DF$UltimoDigitoEst, breaks = 1:10)
hist(DF$UltimoDigitoEst, breaks = 1:10)
DFA <- data.frame(A = c(1,2,3), B = c(4,5,6), C = c(7,8,9), D = c(10,11,12))
DFA
DFA[c(2,3), c(2,3)]
DFA[-c(3,1), -3]
DFA[DFA$A >=2, ]
DFA <- data.frame(A = c(1,2,3), B = c(4,NA,6), C = c(7,8,9), D = c(10,NA,NA)
DFA <- data.frame(A = c(1,2,3), B = c(4,NA,6), C = c(7,8,9), D = c(10,NA,NA))
library(readr)
library(dplyr)
DF <- read_csv("../DD20230331.csv")
nrow(DF)
table(DF$`Estatura (cm)`, useNA = "always")
library(dplyr)
names(DF)
table(DF$`Estatura (cm)`)
DF %>% rename(Estatura = `Estatura (cm)`) -> DF
table(DF$Estatura < 45, useNA = 'ifany') # Si es menor de 45 cm
table(DF$Estatura > 280, useNA = 'ifany') # Si es mayor a 280 cm
DF[DF$Estatura < 45, ]
DF %>% filter(Estatura < 2.8)
DF$Estatura[DF$Estatura < 2.8 & !is.na(DF$Estatura)] <-
DF$Estatura[DF$Estatura < 2.8 & !is.na(DF$Estatura)]*100
table(DF$Estatura < 45, useNA = 'ifany')
DF %>% filter(Estatura > 280)
DF$Estatura[which(DF$Estatura > 1000)] <- NA
hist(DF$Estatura)
hist(DF$Estatura, breaks = 115:210, las =3)
DF$UltimoDigitoEst <- DF$Estatura - 10*(DF$Estatura %% 10)
hist(DF$UltimoDigitoEst, breaks = 1:10)
DFA[,]
DFA[c(2,3), c(2,3)]
DFA[-c(3,1), -3]
DFA[DFA$A >=2, ]
