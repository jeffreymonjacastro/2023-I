sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
sum(!is.na(DF$Peso))
library(readr)
library(dplyr)
#Hello
DF <- read_csv("DD20230421.csv")
str(DF)
all(is.na(DF[, c(19,20)]))
DF <- DF[,-c(19,20)]
sum(rowSums(is.na(DF)) == 18)
DF <- DF[rowSums(is.na(DF)) < 18,]
names(DF)
DF %>% rename(Per = Período,
Sec = Sección,
Estatura = `Estatura (cm)`,
Peso = `Peso (kg)`,
Signo = `Signo del zodiaco`,
Tiempo = `Tiempo de reacción`,
Videojuegos = `Juega videojuegos`,
Deporte = `Hace deporte`,
Color = `Color favorito`,
Talla = `Talla de zapato`,
Polo = `Talla de polo`,
Sistema = `Sistema operativo`,
Fecha = `Fecha de nacimiento`) -> DF
table(DF$Per)
grep("2019-1", DF$Per)
DF[grep("2019-1", DF$Per),]
table(gsub("\\.", "-", DF$Per))
DF$Per <- gsub("\\.", "-", DF$Per)
table(gsub("\\ ", "-", DF$Per))
DF$Per <- gsub("\\ ", "-", DF$Per)
table(gsub("-*-", "-", DF$Per))
DF$Per <- gsub("-*-", "-", DF$Per)
DF$Per <- gsub("I", "1", DF$Per)
table(DF$Per)
table(DF$Per[grep("[0-9][0-9][0-9][0-9]-[0-2]", DF$Per)])
table(DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)])
DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)] <- NA
table(DF$Per)
DF$Per[DF$Per == "2023-2"] <- NA
DF$Per[DF$Per == "2013-1"] <- NA
DF$Per[DF$Per == "2018-2"] <- NA
DF$Per[DF$Per == "2019-1"] <- NA
DF$Per[DF$Per == "2019-2"] <- NA
table(DF$Per)
barplot(table(DF$Per))
DF$Per <- factor(DF$Per, levels= c("2020-1","2020-2","2021-0","2021-1","2021-2","2022-0","2022-1","2022-2","2023-0","2023-1"), ordered = TRUE)
table(DF$Per, useNA = 'ifany')
barplot(table(DF$Per), las = 3)
barplot(table(DF$Per),
xlab = "Período",
ylab = "Cantidad de Personas",
main = "Número de personas registradas por período",
sub = paste("Total de valores válidos:",
sum(!is.na(DF$Per)),
"de una muestra con",
nrow(DF), "observaciones"),
col = c("lightgreen", "lightgreen", "red"),
cex.names = 0.6,)
leyend("topleft",
legend = c("Ciclo regular", "Veranito"),
fill = c("lightgreen", "red"),
bty = "n")
library(readr)
library(dplyr)
#Hello
DF <- read_csv("DD20230421.csv")
str(DF)
all(is.na(DF[, c(19,20)]))
DF <- DF[,-c(19,20)]
sum(rowSums(is.na(DF)) == 18)
DF <- DF[rowSums(is.na(DF)) < 18,]
names(DF)
DF %>% rename(Per = Período,
Sec = Sección,
Estatura = `Estatura (cm)`,
Peso = `Peso (kg)`,
Signo = `Signo del zodiaco`,
Tiempo = `Tiempo de reacción`,
Videojuegos = `Juega videojuegos`,
Deporte = `Hace deporte`,
Color = `Color favorito`,
Talla = `Talla de zapato`,
Polo = `Talla de polo`,
Sistema = `Sistema operativo`,
Fecha = `Fecha de nacimiento`) -> DF
table(DF$Per)
grep("2019-1", DF$Per)
DF[grep("2019-1", DF$Per),]
table(gsub("\\.", "-", DF$Per))
DF$Per <- gsub("\\.", "-", DF$Per)
table(gsub("\\ ", "-", DF$Per))
DF$Per <- gsub("\\ ", "-", DF$Per)
table(gsub("-*-", "-", DF$Per))
DF$Per <- gsub("-*-", "-", DF$Per)
DF$Per <- gsub("I", "1", DF$Per)
table(DF$Per)
table(DF$Per[grep("[0-9][0-9][0-9][0-9]-[0-2]", DF$Per)])
table(DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)])
DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)] <- NA
table(DF$Per)
DF$Per[DF$Per == "2023-2"] <- NA
DF$Per[DF$Per == "2013-1"] <- NA
DF$Per[DF$Per == "2018-2"] <- NA
DF$Per[DF$Per == "2019-1"] <- NA
DF$Per[DF$Per == "2019-2"] <- NA
table(DF$Per)
barplot(table(DF$Per))
DF$Per <- factor(DF$Per, levels= c("2020-1","2020-2","2021-0","2021-1","2021-2","2022-0","2022-1","2022-2","2023-0","2023-1"), ordered = TRUE)
table(DF$Per, useNA = 'ifany')
barplot(table(DF$Per), las = 3)
barplot(table(DF$Per),
xlab = "Período",
ylab = "Cantidad de Personas",
main = "Número de personas registradas por período",
sub = paste("Total de valores válidos:",
sum(!is.na(DF$Per)),
"de una muestra con",
nrow(DF), "observaciones"),
col = c("lightgreen", "lightgreen", "red"),
cex.names = 0.6,)
leyend("topleft",
legend = c("Ciclo regular", "Veranito"),
fill = c("lightgreen", "red"),
bty = "n")
library(readr)
library(dplyr)
#Hello
DF <- read_csv("DD20230421.csv")
str(DF)
all(is.na(DF[, c(19,20)]))
DF <- DF[,-c(19,20)]
sum(rowSums(is.na(DF)) == 18)
DF <- DF[rowSums(is.na(DF)) < 18,]
names(DF)
DF %>% rename(Per = Período,
Sec = Sección,
Estatura = `Estatura (cm)`,
Peso = `Peso (kg)`,
Signo = `Signo del zodiaco`,
Tiempo = `Tiempo de reacción`,
Videojuegos = `Juega videojuegos`,
Deporte = `Hace deporte`,
Color = `Color favorito`,
Talla = `Talla de zapato`,
Polo = `Talla de polo`,
Sistema = `Sistema operativo`,
Fecha = `Fecha de nacimiento`) -> DF
table(DF$Per)
grep("2019-1", DF$Per)
DF[grep("2019-1", DF$Per),]
table(gsub("\\.", "-", DF$Per))
DF$Per <- gsub("\\.", "-", DF$Per)
table(gsub("\\ ", "-", DF$Per))
DF$Per <- gsub("\\ ", "-", DF$Per)
table(gsub("-*-", "-", DF$Per))
DF$Per <- gsub("-*-", "-", DF$Per)
DF$Per <- gsub("I", "1", DF$Per)
table(DF$Per)
table(DF$Per[grep("[0-9][0-9][0-9][0-9]-[0-2]", DF$Per)])
table(DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)])
DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)] <- NA
table(DF$Per)
DF$Per[DF$Per == "2023-2"] <- NA
DF$Per[DF$Per == "2013-1"] <- NA
DF$Per[DF$Per == "2018-2"] <- NA
DF$Per[DF$Per == "2019-1"] <- NA
DF$Per[DF$Per == "2019-2"] <- NA
table(DF$Per)
barplot(table(DF$Per))
DF$Per <- factor(DF$Per, levels= c("2020-1","2020-2","2021-0","2021-1","2021-2","2022-0","2022-1","2022-2","2023-0","2023-1"), ordered = TRUE)
table(DF$Per, useNA = 'ifany')
barplot(table(DF$Per), las = 3)
barplot(table(DF$Per),
xlab = "Período",
ylab = "Cantidad de Personas",
main = "Número de personas registradas por período",
sub = paste("Total de valores válidos:",
sum(!is.na(DF$Per)),
"de una muestra con",
nrow(DF), "observaciones"),
col = c("lightgreen", "lightgreen", "red"),
cex.names = 0.6,)
leyend("topleft",
legend = c("Ciclo regular", "Veranito"),
fill = c("lightgreen", "red"),
bty = "n")
library(readr)
library(dplyr)
#Hello
DF <- read_csv("DD20230421.csv")
str(DF)
all(is.na(DF[, c(19,20)]))
DF <- DF[,-c(19,20)]
sum(rowSums(is.na(DF)) == 18)
DF <- DF[rowSums(is.na(DF)) < 18,]
names(DF)
DF %>% rename(Per = Período,
Sec = Sección,
Estatura = `Estatura (cm)`,
Peso = `Peso (kg)`,
Signo = `Signo del zodiaco`,
Tiempo = `Tiempo de reacción`,
Videojuegos = `Juega videojuegos`,
Deporte = `Hace deporte`,
Color = `Color favorito`,
Talla = `Talla de zapato`,
Polo = `Talla de polo`,
Sistema = `Sistema operativo`,
Fecha = `Fecha de nacimiento`) -> DF
table(DF$Per)
grep("2019-1", DF$Per)
DF[grep("2019-1", DF$Per),]
table(gsub("\\.", "-", DF$Per))
DF$Per <- gsub("\\.", "-", DF$Per)
table(gsub("\\ ", "-", DF$Per))
DF$Per <- gsub("\\ ", "-", DF$Per)
table(gsub("-*-", "-", DF$Per))
DF$Per <- gsub("-*-", "-", DF$Per)
DF$Per <- gsub("I", "1", DF$Per)
table(DF$Per)
table(DF$Per[grep("[0-9][0-9][0-9][0-9]-[0-2]", DF$Per)])
table(DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)])
DF$Per[-grep("20[1-2][0-9]-[0-2]", DF$Per)] <- NA
table(DF$Per)
DF$Per[DF$Per == "2023-2"] <- NA
DF$Per[DF$Per == "2013-1"] <- NA
DF$Per[DF$Per == "2018-2"] <- NA
DF$Per[DF$Per == "2019-1"] <- NA
DF$Per[DF$Per == "2019-2"] <- NA
table(DF$Per)
barplot(table(DF$Per))
DF$Per <- factor(DF$Per, levels= c("2020-1","2020-2","2021-0","2021-1","2021-2","2022-0","2022-1","2022-2","2023-0","2023-1"), ordered = TRUE)
table(DF$Per, useNA = 'ifany')
barplot(table(DF$Per), las = 3)
barplot(table(DF$Per),
xlab = "Período",
ylab = "Cantidad de Personas",
main = "Número de personas registradas por período",
sub = paste("Total de valores válidos:",
sum(!is.na(DF$Per)),
"de una muestra con",
nrow(DF), "observaciones"),
col = c("lightgreen", "lightgreen", "red"),
cex.names = 0.6,)
legend("topleft",
legend = c("Ciclo regular", "Veranito"),
fill = c("lightgreen", "red"),
bty = "n")
(table(DF$Per))[table(DF$Per) == max(table(DF$Per))]
X <- c(19,25,19,18,19,25,25,18)
table(X)
which.max(table(X))
(table(X))[table(X) == max(table(X))]
table(DF$Ciclo)
x <- c(16,30)
y <- c(0,1000)
plot(DF$Edad, DF$Tiempo
, col = "#0000ff"
, main = "Edad vs. Tiempo de reacción"
, xlab = "Edad (años)"
, ylab = "Tiempo de reacción"
, xlim = x
, ylim = y)
boxplot(DF$Estatura, horizontal = TRUE)
DF %>% filter(Estatura > 280)
DF$Estatura[DF$Estatura > 280] <- NA
boxplot(DF$Estatura, horizontal = TRUE)
DF %>% filter(Estatura < 45) %>% count()
Sel <- !is.na(DF$Estatura) & DF$Estatura < 45
DF$Estatura[Sel] <- 100*DF$Estatura[Sel]
boxplot(DF$Estatura, horizontal = TRUE)
q3 <- quantile(DF$Estatura, 0.75, na.rm = TRUE, type = 3)
q3
q1 <- quantile(DF$Estatura, 0.25, na.rm = TRUE, type = 3)
q1
RIC <- q3 - q1
RIC
DF %>% filter(Estatura > q3 + 1.5*RIC)
DF[!is.na(DF$Estatura) & DF$Estatura < q1 - 1.5*RIC, ]
# Promedio
mean(DF$Estatura, na.rm = TRUE)
round(mean(DF$Estatura, na.rm = TRUE), digits = 2)
round(10.5)
round(11.5)
floor(10.5)
ceiling(10.5)
median(DF$Estatura, na.rm = TRUE)
moda <- as.numeric(names((table(DF$Estatura))[table(DF$Estatura) == max(table(DF$Estatura), na.rm = TRUE)]))
hist(DF$Estatura
, main = "Histograma de estaturas"
, xlab = "Estatura (cm)"
, ylab = "Frecuencia relativa"
, prob = TRUE
#, breaks = seq(from = min(DF$Estatura, na.rm = TRUE) - 0.5, to = max(DF$Estatura, na.rm = TRUE) + 0.5, by = 10)
)
abline(v = c(mean(DF$Estatura, na.rm = TRUE)
, median(DF$Estatura, na.rm = TRUE)
, moda)
, col = c("red", "blue", "orange")
, lwd = 2
, lty = c(2,1,2)
)
legend("topright"
, legend = c("promedio", "mediana", "moda")
, col = c("red", "blue", "orange")
, lwd = 2
, lty = c(2,1,2)
)
DF$Ultimo <- DF$Estatura %% 10
barplot(table(DF$Ultimo))
table(DF$Ultimo)
DF$Ultimo <- round(DF$Ultimo)
barplot(table(DF$Ultimo))
DF$multiplo5 <- (DF$Ultimo == 0) | (DF$Ultimo == 5)
table(DF$multiplo5)
barplot(table(DF$multiplo5)/sum(!is.na(DF$multiplo5))
, main = "Comparación de los últimos digitos múltiplos de 5 con los que no son"
, ylab = "frecuencia relativa"
, names.arg = c("no multiplos de 5", "multiplos de 5")
)
abline(h = 0.2, col = "red", lty = 2, lwd = 2)
legend("topright", legend = "frec. esperada de mult. 5", col = "red", lty = 2, lwd = 2)
table(DF$Peso)
sum(!is.na(DF$Peso))
DF$Peso <- as.numeric(DF$Peso)
sum(!is.na(DF$Peso))
? sample
x <- c(1,2,3,4,5,6)
sample(x, 6)
x <- c(1,2,3,4,5,6)
sample(x)
x <- c(1,2,3,4,5,6)
sample(x)
x <- c(1,2,3,4,5,6)
sample(x)
x <- c(1,2,3,4,5,6,7,8,9,10)
sample(x)
x <- c(1,2,3,4,5,6)
sample(x)
x <- c('a','e','i','o','u')
sample(x)
x <- c('a','e','i','o','u')
sample(x)
x <- c('a','e','i','o','u')
sample(x)
x <- c('a','e','i','o','u')
sample(x)
x <- c('a','e','i','o','u')
sample(x)
x <- c('a','e','i','o','u')
sample(x, 3)
x <- c('a','e','i','o','u')
sample(x, 3)
x <- c('a','e','i','o','u')
sample(x, 3)
x <- c('a','e','i','o','u')
sample(x, 10)
x <- c('a','e','i','o','u')
sample(x, 2)
? replicate
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(1, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(1, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(1, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(1, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(1, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(3, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(3, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 2)
replicate(5, y)
x <- c('a','e','i','o','u')
y <- sample(x, 4)
replicate(5, y)
replicate(1, sample(1:100, 10, replace = TRUE))
replicate(1, x)
replicate(3, x)
replicate(3, y)
replicate(3, y, simplify= "array")
library(readr)
library(dplyr)
DF <- read_csv("../DD20230331")
DF <- read_csv("../DD20230331.csv")
library(readr)
DD20230331 <- read_csv("DD20230331.csv")
View(DD20230331)
DF <- read_csv("DD20230331.csv")
rm(DD20230331)
table(DF$`Talla de polo`)
DF %>% rename(Polo = `Talla de polo`)
table(DF$Polo)
View(DF)
DF %>% rename(Polo = `Talla de polo`)
DF %>% rename(Polo = `Talla de polo`)
table(DF$Polo)
DF %>% rename(Polo = `Talla de polo`) -> DF
table(DF$Polo)
quantile(DF$Polo, 0.5, type = 3, na.rn = TRUE)
quantile(DF$Polo, 0.5, type = 3, na.rm = TRUE)
DF$Polo[DF$Polo = F]
DF$Polo[DF$Polo == 'F']
table(DF$Polo[DF$Polo == 'F'])
DF$Polo[DF$Polo == 'F'] <- NA
q1 <- quantile(DF$Polo, 0.25, type = 3, na.rm= TRUE)
q3 <- quantile(DF$Polo, 0.75, type = 3, na.rm= TRUE)
DF$Polo[DF$Polo == 'F'] <- NA
DF$Polo[DF$Polo == 'l'] <- NA
DF$Polo[DF$Polo == 'm'] <- NA
DF$Polo[DF$Polo == 'M ó S'] <- NA
DF$Polo[DF$Polo == 'mM'] <- NA
DF$Polo[DF$Polo == 's'] <- NA
DF$Polo[DF$Polo == 'S/M'] <- NA
DF$Polo[DF$Polo == 'xl'] <- NA
DF$Polo[DF$Polo == 'Xl'] <- NA
DF$Polo[DF$Polo == 'xs'] <- NA
quantile(DF$Polo, 0.5, type = 3, na.rm = TRUE)
q1 <- quantile(DF$Polo, 0.25, type = 3, na.rm= TRUE)
q3 <- quantile(DF$Polo, 0.75, type = 3, na.rm= TRUE)
table(DF$Polo)
levels(XXS < XS < S < M < L < XL < XXL)
DF %>% rename(Tiempo = `Tiempo de reacción`) -> DF
mode(DF$Tiempo)
TiempoLimpio <- as.numeric(DF$Tiempo)
sum(is.na(TiempoLimpio))
sum(is.na(DF$Tiempo))
DF$Tiempo[is.na(TiempoLimpio) & !is.na(DF$Tiempo)]
DF$Tiempo <- TiempoLimpio
rm(TiempoLimpio)
hist(DF$Tiempo)
boxplot(DF$Tiempo, horizontal = TRUE)
BXPL <- boxplot(DF$Tiempo, horizontal = TRUE)
BXPL$out
q1 <- quantile(DF$Tiempo, 0.25, na.rm = TRUE, type = 3)
q3 <- quantile(DF$Tiempo, 0.75, na.rm = TRUE, type = 3)
ric <- q3 - q1
q1
q3
ric
q1 <- quantile(DF$Tiempo, 0.25, na.rm = TRUE, type = 3, name = FALSE)
q3 <- quantile(DF$Tiempo, 0.75, na.rm = TRUE, type = 3, name = FALSE)
ric <- q3 - q1
q1
q3
ric
q1 - 1.5*ric
q3 + 1.5*ric
min(DF$Tiempo, na.rm=TRUE)
max(DF$Tiempo, na.rm=TRUE)
mean(DF$Tiempo, na.rm = TRUE)
sd(DF$Tiempo, na.rm = TRUE)
sd(DF$Tiempo, na.rm = TRUE) / mean(DF$Tiempo, na.rm = TRUE)
table(DF$Tiempo)
mode(DF$Tiempo)
TiempoLimpio
DF$Tiempo <- TiempoLimpio
TiempoLimpio <- as.numeric(DF$Tiempo)
DF$Tiempo[is.na(TiempoLimpio) & !is.na(DF$Tiempo)]
DF$Tiempo <- TiempoLimpio
# rm(TiempoLimpio)
TiempoLimpio <- DF$Tiempo
TiempoLimpio[(TiempoLimpio < 120) | (TiempoLimpio > 1000)] <- NA
mean(TiempoLimpio, na.rm = TRUE)
sd(TiempoLimpio, na.rm = TRUE)
sd(TiempoLimpio, na.rm = TRUE) / mean(DF$Tiempo, na.rm = TRUE)
median(DF$Tiempo)
median(TiempoLimpio)
median(DF$Tiempo, na.rm = TRUE)
median(TiempoLimpio, na.rm = TRUE)
boxplot(TiempoLimpio, horizontal = TRUE)
DF$Tiempo <- TiempoLimpio
rm(TiempoLimpio)
DF$Edad <- as.numeric(DF$Edad)
plot(DF$Edad, DF$Tiempo)
smoothScatter(DF$Edad, DF$Tiempo)
