---
title: "covid19"
format: html
editor: visual
---

## Covid-19

::: callout-note
## Librerías

```{r}
library(readr)
library(dplyr)

```
:::

::: callout-note
## Dataframes

```{r}
DC = read_csv("C19.csv")
DD = read_csv("Demo.csv")
```
:::

::: callout-note
## Funciones

```{r}
r <- function(x){
  return(round(x, digits = 2))
}
```

```{r}
cv <- function(X){
  return(sd(X)/mean(X))
}

rango <- function(X){
  return(max(X)-min(X))
}
```
:::

### Tablas para Covid

DFU

```{r}
DC %>% filter(Pais == "United Kingdom") %>% 
  group_by(Fecha) %>% 
  summarise(TotalContagiados = sum(Contagiados)
    , TotalMuertos = sum(Muertos)
    , TotalRecuperados = sum(Recuperados)) -> DFU
```

Agregar columna CountDia

```{r}
DFU$CountDia <- diff(c(0, DFU$TotalContagiados))
```

Agregar columna tasa de mortalidad TMA

```{r}
DFU$TMU <- round(diff(c(0, DFU$TotalMuertos)) / DFU$CountDia * 100, digit = 2)
```

Tabla comparativa DX

```{r}
DC %>% filter(Fecha == max(Fecha)) -> DZ
DX <- left_join(DZ,DD)
DX$Mort <- DX$Muertos/DX$Contagiados
DX <- DX[!is.na(DX$Mort),]
```

### Preguntas

Observaciones y variables de DC y DD

```{r}
dim(DC)
dim(DD)
```

Casos incompletos DC y DD

```{r}
round(sum(!complete.cases(DC)) / nrow(DC) * 100, digits = 2)
round(sum(!complete.cases(DD)) / nrow(DD) * 100, digits = 2)
```

Variable con más datos faltantes en DC y DD

```{r}
which.max(colSums(is.na(DC)))
which.max(colSums(is.na(DD)))
```

Tipo de variable de cada columna

```{r}
spec(DC)
```

Primeros contagiados de United Kingdom y cuántos se contagiaron

```{r}
DFU[DFU$TotalContagiados != 0, ]
```

Sobre la variable CountDia de DFU, considerando desde el primer día de contagiados, sus descriptores gráficos son:

```{r}
DFU <- DFU[DFU$TotalContagiados != 0, ]
```

```{r}
summary(DFU$CountDia)
```

SJSJJS

```{r}
r(sd(DFU$CountDia))
r(diff(range(DFU$CountDia)))
r(IQR(DFU$CountDia))
r(sd(DFU$CountDia)/mean(DFU$CountDia) * 100)
```

Otra forma

```{r}
fi <- min(DFU$Fecha[DFU$CountDia > 0])
ff <- max(DFU$Fecha[DFU$CountDia > 0])

Sel <- (fi <= DFU$Fecha) & (DFU$Fecha <= ff)

r(min(DFU$CountDia[Sel]))
r(median(DFU$CountDia[Sel]))
r(mean(DFU$CountDia[Sel]))
r(max(DFU$CountDia[Sel]))

r(sd(DFU$CountDia[Sel]))
r(range(DFU$CountDia[Sel]))
r(IQR(DFU$CountDia[Sel]))
r(sd(DFU$CountDia[Sel])/mean(DFU$CountDia[Sel]) * 100)
```

El día con mayor número de contagios diarios de DFU

```{r}
DFU[DFU$CountDia == max(DFU$CountDia), ]
```

Grafique la fecha contra la tasa de mortalidad acumulada TMA en DFU

```{r}
plot(DFU$Fecha, DFU$TMU,
     ylim = c(0,60))
```

El siguiente fragmento de código muestra un diagrama de caja y bigotes de la mortalidad por en regiones tropicales comparada con la mortalidad en regiones no tropicales.

```{r}
DC %>% filter(Fecha == max(Fecha)) -> DF
Mort <- DF$Muertos/DF$Contagiados
Trop <- (-23 <= DF$Latitud) & (DF$Latitud <= 23)
boxplot(Mort ~ Trop,
        ylim= c(0,0.35)
        )
abline(h = 0, lty = 3, col = "red")
```

Histograma

```{r}
X <- DFU$CountDia
hist(X, prob = TRUE, breaks=seq(0,10000,by = 1000))
abline(v = c(mean(X), median(X)), col = c("red", "blue"))
```

Usando la tabla DX, ejecute:

```{r}
Trop <- (-23 <= DX$Latitud) & (DX$Latitud <= 23)
plot(
  DX$Edad
, DX$Fertilidad
, cex=log10(DX$Contagiados)
, pch = 21
, col= rgb(0,0,1,0.1)
, bg = rgb(Trop,0,0,DX$Mort)
, bty = "n"
, xlab = "mediana de la edad"
, ylab = "fertilidad promedio"
)
```

```{r}
length(unique(temp$Provincia))
```

```{r}
DC %>% 
  filter(Pais == "United Kingdom" & Contagiados > 0) %>% 
  select(Fecha, Contagiados) %>% 
  arrange(Fecha) -> DFU
```

```{r}
DC %>% 
  filter(Pais == "United Kingdom") %>%
  group_by(Fecha, Pais) %>%
  summarise(
    Contagiados = sum(Contagiados)
    , Muertos = sum(Muertos)
    , Recuperados = sum(Recuperados)
  ) -> DFU 
```
